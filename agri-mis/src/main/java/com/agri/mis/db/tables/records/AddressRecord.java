/*
 * This file is generated by jOOQ.
 */
package com.agri.mis.db.tables.records;


import com.agri.mis.db.tables.Address;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AddressRecord extends UpdatableRecordImpl<AddressRecord> implements Record9<Long, String, String, String, String, String, String, Object, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.address.id</code>.
     */
    public AddressRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.address.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.address.province</code>.
     */
    public AddressRecord setProvince(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.address.province</code>.
     */
    public String getProvince() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.address.city</code>.
     */
    public AddressRecord setCity(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.address.city</code>.
     */
    public String getCity() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.address.region</code>.
     */
    public AddressRecord setRegion(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.address.region</code>.
     */
    public String getRegion() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.address.line_detail</code>.
     */
    public AddressRecord setLineDetail(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.address.line_detail</code>.
     */
    public String getLineDetail() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.address.link_name</code>.
     */
    public AddressRecord setLinkName(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.address.link_name</code>.
     */
    public String getLinkName() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.address.link_mobile</code>.
     */
    public AddressRecord setLinkMobile(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.address.link_mobile</code>.
     */
    public String getLinkMobile() {
        return (String) get(6);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public AddressRecord setLocation(Object value) {
        set(7, value);
        return this;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public Object getLocation() {
        return get(7);
    }

    /**
     * Setter for <code>public.address.created_at</code>.
     */
    public AddressRecord setCreatedAt(LocalDateTime value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.address.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, String, String, String, String, String, String, Object, LocalDateTime> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Long, String, String, String, String, String, String, Object, LocalDateTime> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Address.ADDRESS.ID;
    }

    @Override
    public Field<String> field2() {
        return Address.ADDRESS.PROVINCE;
    }

    @Override
    public Field<String> field3() {
        return Address.ADDRESS.CITY;
    }

    @Override
    public Field<String> field4() {
        return Address.ADDRESS.REGION;
    }

    @Override
    public Field<String> field5() {
        return Address.ADDRESS.LINE_DETAIL;
    }

    @Override
    public Field<String> field6() {
        return Address.ADDRESS.LINK_NAME;
    }

    @Override
    public Field<String> field7() {
        return Address.ADDRESS.LINK_MOBILE;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    public Field<Object> field8() {
        return Address.ADDRESS.LOCATION;
    }

    @Override
    public Field<LocalDateTime> field9() {
        return Address.ADDRESS.CREATED_AT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getProvince();
    }

    @Override
    public String component3() {
        return getCity();
    }

    @Override
    public String component4() {
        return getRegion();
    }

    @Override
    public String component5() {
        return getLineDetail();
    }

    @Override
    public String component6() {
        return getLinkName();
    }

    @Override
    public String component7() {
        return getLinkMobile();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    public Object component8() {
        return getLocation();
    }

    @Override
    public LocalDateTime component9() {
        return getCreatedAt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getProvince();
    }

    @Override
    public String value3() {
        return getCity();
    }

    @Override
    public String value4() {
        return getRegion();
    }

    @Override
    public String value5() {
        return getLineDetail();
    }

    @Override
    public String value6() {
        return getLinkName();
    }

    @Override
    public String value7() {
        return getLinkMobile();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    public Object value8() {
        return getLocation();
    }

    @Override
    public LocalDateTime value9() {
        return getCreatedAt();
    }

    @Override
    public AddressRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AddressRecord value2(String value) {
        setProvince(value);
        return this;
    }

    @Override
    public AddressRecord value3(String value) {
        setCity(value);
        return this;
    }

    @Override
    public AddressRecord value4(String value) {
        setRegion(value);
        return this;
    }

    @Override
    public AddressRecord value5(String value) {
        setLineDetail(value);
        return this;
    }

    @Override
    public AddressRecord value6(String value) {
        setLinkName(value);
        return this;
    }

    @Override
    public AddressRecord value7(String value) {
        setLinkMobile(value);
        return this;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    public AddressRecord value8(Object value) {
        setLocation(value);
        return this;
    }

    @Override
    public AddressRecord value9(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public AddressRecord values(Long value1, String value2, String value3, String value4, String value5, String value6, String value7, Object value8, LocalDateTime value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AddressRecord
     */
    public AddressRecord() {
        super(Address.ADDRESS);
    }

    /**
     * Create a detached, initialised AddressRecord
     */
    public AddressRecord(Long id, String province, String city, String region, String lineDetail, String linkName, String linkMobile, Object location, LocalDateTime createdAt) {
        super(Address.ADDRESS);

        setId(id);
        setProvince(province);
        setCity(city);
        setRegion(region);
        setLineDetail(lineDetail);
        setLinkName(linkName);
        setLinkMobile(linkMobile);
        setLocation(location);
        setCreatedAt(createdAt);
    }

    /**
     * Create a detached, initialised AddressRecord
     */
    public AddressRecord(com.agri.mis.db.tables.pojos.Address value) {
        super(Address.ADDRESS);

        if (value != null) {
            setId(value.getId());
            setProvince(value.getProvince());
            setCity(value.getCity());
            setRegion(value.getRegion());
            setLineDetail(value.getLineDetail());
            setLinkName(value.getLinkName());
            setLinkMobile(value.getLinkMobile());
            setLocation(value.getLocation());
            setCreatedAt(value.getCreatedAt());
        }
    }
}
