/*
 * This file is generated by jOOQ.
 */
package com.agri.mis.db.tables.records;


import com.agri.mis.db.tables.MarkProductCycleExpense;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MarkProductCycleExpenseRecord extends UpdatableRecordImpl<MarkProductCycleExpenseRecord> implements Record10<Long, String, String, BigDecimal, BigDecimal, Double, Long, Long, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.mark_product_cycle_expense.cycle_id</code>.
     */
    public MarkProductCycleExpenseRecord setCycleId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.mark_product_cycle_expense.cycle_id</code>.
     */
    public Long getCycleId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>public.mark_product_cycle_expense.invest_product_name</code>.
     */
    public MarkProductCycleExpenseRecord setInvestProductName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.mark_product_cycle_expense.invest_product_name</code>.
     */
    public String getInvestProductName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.mark_product_cycle_expense.description</code>.
     */
    public MarkProductCycleExpenseRecord setDescription(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.mark_product_cycle_expense.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.mark_product_cycle_expense.amount</code>.
     */
    public MarkProductCycleExpenseRecord setAmount(BigDecimal value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.mark_product_cycle_expense.amount</code>.
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>public.mark_product_cycle_expense.price</code>.
     */
    public MarkProductCycleExpenseRecord setPrice(BigDecimal value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.mark_product_cycle_expense.price</code>.
     */
    public BigDecimal getPrice() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>public.mark_product_cycle_expense.quantity</code>.
     */
    public MarkProductCycleExpenseRecord setQuantity(Double value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.mark_product_cycle_expense.quantity</code>.
     */
    public Double getQuantity() {
        return (Double) get(5);
    }

    /**
     * Setter for
     * <code>public.mark_product_cycle_expense.product_batch_id</code>.
     */
    public MarkProductCycleExpenseRecord setProductBatchId(Long value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.mark_product_cycle_expense.product_batch_id</code>.
     */
    public Long getProductBatchId() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>public.mark_product_cycle_expense.id</code>.
     */
    public MarkProductCycleExpenseRecord setId(Long value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.mark_product_cycle_expense.id</code>.
     */
    public Long getId() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>public.mark_product_cycle_expense.calc_unit</code>.
     */
    public MarkProductCycleExpenseRecord setCalcUnit(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.mark_product_cycle_expense.calc_unit</code>.
     */
    public String getCalcUnit() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.mark_product_cycle_expense.expense_type</code>.
     */
    public MarkProductCycleExpenseRecord setExpenseType(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.mark_product_cycle_expense.expense_type</code>.
     */
    public String getExpenseType() {
        return (String) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Long, String, String, BigDecimal, BigDecimal, Double, Long, Long, String, String> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Long, String, String, BigDecimal, BigDecimal, Double, Long, Long, String, String> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return MarkProductCycleExpense.MARK_PRODUCT_CYCLE_EXPENSE.CYCLE_ID;
    }

    @Override
    public Field<String> field2() {
        return MarkProductCycleExpense.MARK_PRODUCT_CYCLE_EXPENSE.INVEST_PRODUCT_NAME;
    }

    @Override
    public Field<String> field3() {
        return MarkProductCycleExpense.MARK_PRODUCT_CYCLE_EXPENSE.DESCRIPTION;
    }

    @Override
    public Field<BigDecimal> field4() {
        return MarkProductCycleExpense.MARK_PRODUCT_CYCLE_EXPENSE.AMOUNT;
    }

    @Override
    public Field<BigDecimal> field5() {
        return MarkProductCycleExpense.MARK_PRODUCT_CYCLE_EXPENSE.PRICE;
    }

    @Override
    public Field<Double> field6() {
        return MarkProductCycleExpense.MARK_PRODUCT_CYCLE_EXPENSE.QUANTITY;
    }

    @Override
    public Field<Long> field7() {
        return MarkProductCycleExpense.MARK_PRODUCT_CYCLE_EXPENSE.PRODUCT_BATCH_ID;
    }

    @Override
    public Field<Long> field8() {
        return MarkProductCycleExpense.MARK_PRODUCT_CYCLE_EXPENSE.ID;
    }

    @Override
    public Field<String> field9() {
        return MarkProductCycleExpense.MARK_PRODUCT_CYCLE_EXPENSE.CALC_UNIT;
    }

    @Override
    public Field<String> field10() {
        return MarkProductCycleExpense.MARK_PRODUCT_CYCLE_EXPENSE.EXPENSE_TYPE;
    }

    @Override
    public Long component1() {
        return getCycleId();
    }

    @Override
    public String component2() {
        return getInvestProductName();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public BigDecimal component4() {
        return getAmount();
    }

    @Override
    public BigDecimal component5() {
        return getPrice();
    }

    @Override
    public Double component6() {
        return getQuantity();
    }

    @Override
    public Long component7() {
        return getProductBatchId();
    }

    @Override
    public Long component8() {
        return getId();
    }

    @Override
    public String component9() {
        return getCalcUnit();
    }

    @Override
    public String component10() {
        return getExpenseType();
    }

    @Override
    public Long value1() {
        return getCycleId();
    }

    @Override
    public String value2() {
        return getInvestProductName();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public BigDecimal value4() {
        return getAmount();
    }

    @Override
    public BigDecimal value5() {
        return getPrice();
    }

    @Override
    public Double value6() {
        return getQuantity();
    }

    @Override
    public Long value7() {
        return getProductBatchId();
    }

    @Override
    public Long value8() {
        return getId();
    }

    @Override
    public String value9() {
        return getCalcUnit();
    }

    @Override
    public String value10() {
        return getExpenseType();
    }

    @Override
    public MarkProductCycleExpenseRecord value1(Long value) {
        setCycleId(value);
        return this;
    }

    @Override
    public MarkProductCycleExpenseRecord value2(String value) {
        setInvestProductName(value);
        return this;
    }

    @Override
    public MarkProductCycleExpenseRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public MarkProductCycleExpenseRecord value4(BigDecimal value) {
        setAmount(value);
        return this;
    }

    @Override
    public MarkProductCycleExpenseRecord value5(BigDecimal value) {
        setPrice(value);
        return this;
    }

    @Override
    public MarkProductCycleExpenseRecord value6(Double value) {
        setQuantity(value);
        return this;
    }

    @Override
    public MarkProductCycleExpenseRecord value7(Long value) {
        setProductBatchId(value);
        return this;
    }

    @Override
    public MarkProductCycleExpenseRecord value8(Long value) {
        setId(value);
        return this;
    }

    @Override
    public MarkProductCycleExpenseRecord value9(String value) {
        setCalcUnit(value);
        return this;
    }

    @Override
    public MarkProductCycleExpenseRecord value10(String value) {
        setExpenseType(value);
        return this;
    }

    @Override
    public MarkProductCycleExpenseRecord values(Long value1, String value2, String value3, BigDecimal value4, BigDecimal value5, Double value6, Long value7, Long value8, String value9, String value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MarkProductCycleExpenseRecord
     */
    public MarkProductCycleExpenseRecord() {
        super(MarkProductCycleExpense.MARK_PRODUCT_CYCLE_EXPENSE);
    }

    /**
     * Create a detached, initialised MarkProductCycleExpenseRecord
     */
    public MarkProductCycleExpenseRecord(Long cycleId, String investProductName, String description, BigDecimal amount, BigDecimal price, Double quantity, Long productBatchId, Long id, String calcUnit, String expenseType) {
        super(MarkProductCycleExpense.MARK_PRODUCT_CYCLE_EXPENSE);

        setCycleId(cycleId);
        setInvestProductName(investProductName);
        setDescription(description);
        setAmount(amount);
        setPrice(price);
        setQuantity(quantity);
        setProductBatchId(productBatchId);
        setId(id);
        setCalcUnit(calcUnit);
        setExpenseType(expenseType);
    }

    /**
     * Create a detached, initialised MarkProductCycleExpenseRecord
     */
    public MarkProductCycleExpenseRecord(com.agri.mis.db.tables.pojos.MarkProductCycleExpense value) {
        super(MarkProductCycleExpense.MARK_PRODUCT_CYCLE_EXPENSE);

        if (value != null) {
            setCycleId(value.getCycleId());
            setInvestProductName(value.getInvestProductName());
            setDescription(value.getDescription());
            setAmount(value.getAmount());
            setPrice(value.getPrice());
            setQuantity(value.getQuantity());
            setProductBatchId(value.getProductBatchId());
            setId(value.getId());
            setCalcUnit(value.getCalcUnit());
            setExpenseType(value.getExpenseType());
        }
    }
}
