/*
 * This file is generated by jOOQ.
 */
package com.agri.mis.db.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MarkProduct implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private String name;
    private String code;
    private Long categoryId;
    private String imageUrl;
    private String calcUnit;
    private String description;

    public MarkProduct() {}

    public MarkProduct(MarkProduct value) {
        this.id = value.id;
        this.name = value.name;
        this.code = value.code;
        this.categoryId = value.categoryId;
        this.imageUrl = value.imageUrl;
        this.calcUnit = value.calcUnit;
        this.description = value.description;
    }

    public MarkProduct(
        Long id,
        String name,
        String code,
        Long categoryId,
        String imageUrl,
        String calcUnit,
        String description
    ) {
        this.id = id;
        this.name = name;
        this.code = code;
        this.categoryId = categoryId;
        this.imageUrl = imageUrl;
        this.calcUnit = calcUnit;
        this.description = description;
    }

    /**
     * Getter for <code>public.mark_product.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.mark_product.id</code>.
     */
    public MarkProduct setId(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>public.mark_product.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>public.mark_product.name</code>.
     */
    public MarkProduct setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Getter for <code>public.mark_product.code</code>.
     */
    public String getCode() {
        return this.code;
    }

    /**
     * Setter for <code>public.mark_product.code</code>.
     */
    public MarkProduct setCode(String code) {
        this.code = code;
        return this;
    }

    /**
     * Getter for <code>public.mark_product.category_id</code>.
     */
    public Long getCategoryId() {
        return this.categoryId;
    }

    /**
     * Setter for <code>public.mark_product.category_id</code>.
     */
    public MarkProduct setCategoryId(Long categoryId) {
        this.categoryId = categoryId;
        return this;
    }

    /**
     * Getter for <code>public.mark_product.image_url</code>.
     */
    public String getImageUrl() {
        return this.imageUrl;
    }

    /**
     * Setter for <code>public.mark_product.image_url</code>.
     */
    public MarkProduct setImageUrl(String imageUrl) {
        this.imageUrl = imageUrl;
        return this;
    }

    /**
     * Getter for <code>public.mark_product.calc_unit</code>.
     */
    public String getCalcUnit() {
        return this.calcUnit;
    }

    /**
     * Setter for <code>public.mark_product.calc_unit</code>.
     */
    public MarkProduct setCalcUnit(String calcUnit) {
        this.calcUnit = calcUnit;
        return this;
    }

    /**
     * Getter for <code>public.mark_product.description</code>.
     */
    public String getDescription() {
        return this.description;
    }

    /**
     * Setter for <code>public.mark_product.description</code>.
     */
    public MarkProduct setDescription(String description) {
        this.description = description;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final MarkProduct other = (MarkProduct) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.code == null) {
            if (other.code != null)
                return false;
        }
        else if (!this.code.equals(other.code))
            return false;
        if (this.categoryId == null) {
            if (other.categoryId != null)
                return false;
        }
        else if (!this.categoryId.equals(other.categoryId))
            return false;
        if (this.imageUrl == null) {
            if (other.imageUrl != null)
                return false;
        }
        else if (!this.imageUrl.equals(other.imageUrl))
            return false;
        if (this.calcUnit == null) {
            if (other.calcUnit != null)
                return false;
        }
        else if (!this.calcUnit.equals(other.calcUnit))
            return false;
        if (this.description == null) {
            if (other.description != null)
                return false;
        }
        else if (!this.description.equals(other.description))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.code == null) ? 0 : this.code.hashCode());
        result = prime * result + ((this.categoryId == null) ? 0 : this.categoryId.hashCode());
        result = prime * result + ((this.imageUrl == null) ? 0 : this.imageUrl.hashCode());
        result = prime * result + ((this.calcUnit == null) ? 0 : this.calcUnit.hashCode());
        result = prime * result + ((this.description == null) ? 0 : this.description.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("MarkProduct (");

        sb.append(id);
        sb.append(", ").append(name);
        sb.append(", ").append(code);
        sb.append(", ").append(categoryId);
        sb.append(", ").append(imageUrl);
        sb.append(", ").append(calcUnit);
        sb.append(", ").append(description);

        sb.append(")");
        return sb.toString();
    }
}
