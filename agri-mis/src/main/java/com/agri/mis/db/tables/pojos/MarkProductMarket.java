/*
 * This file is generated by jOOQ.
 */
package com.agri.mis.db.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDate;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MarkProductMarket implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long productId;
    private BigDecimal priceWholesale;
    private String calcUnit;
    private Long id;
    private LocalDate occurAt;
    private BigDecimal priceRetal;
    private Long marketId;
    private Integer quantity;

    public MarkProductMarket() {}

    public MarkProductMarket(MarkProductMarket value) {
        this.productId = value.productId;
        this.priceWholesale = value.priceWholesale;
        this.calcUnit = value.calcUnit;
        this.id = value.id;
        this.occurAt = value.occurAt;
        this.priceRetal = value.priceRetal;
        this.marketId = value.marketId;
        this.quantity = value.quantity;
    }

    public MarkProductMarket(
        Long productId,
        BigDecimal priceWholesale,
        String calcUnit,
        Long id,
        LocalDate occurAt,
        BigDecimal priceRetal,
        Long marketId,
        Integer quantity
    ) {
        this.productId = productId;
        this.priceWholesale = priceWholesale;
        this.calcUnit = calcUnit;
        this.id = id;
        this.occurAt = occurAt;
        this.priceRetal = priceRetal;
        this.marketId = marketId;
        this.quantity = quantity;
    }

    /**
     * Getter for <code>public.mark_product_market.product_id</code>.
     */
    public Long getProductId() {
        return this.productId;
    }

    /**
     * Setter for <code>public.mark_product_market.product_id</code>.
     */
    public MarkProductMarket setProductId(Long productId) {
        this.productId = productId;
        return this;
    }

    /**
     * Getter for <code>public.mark_product_market.price_wholesale</code>.
     */
    public BigDecimal getPriceWholesale() {
        return this.priceWholesale;
    }

    /**
     * Setter for <code>public.mark_product_market.price_wholesale</code>.
     */
    public MarkProductMarket setPriceWholesale(BigDecimal priceWholesale) {
        this.priceWholesale = priceWholesale;
        return this;
    }

    /**
     * Getter for <code>public.mark_product_market.calc_unit</code>.
     */
    public String getCalcUnit() {
        return this.calcUnit;
    }

    /**
     * Setter for <code>public.mark_product_market.calc_unit</code>.
     */
    public MarkProductMarket setCalcUnit(String calcUnit) {
        this.calcUnit = calcUnit;
        return this;
    }

    /**
     * Getter for <code>public.mark_product_market.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.mark_product_market.id</code>.
     */
    public MarkProductMarket setId(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>public.mark_product_market.occur_at</code>.
     */
    public LocalDate getOccurAt() {
        return this.occurAt;
    }

    /**
     * Setter for <code>public.mark_product_market.occur_at</code>.
     */
    public MarkProductMarket setOccurAt(LocalDate occurAt) {
        this.occurAt = occurAt;
        return this;
    }

    /**
     * Getter for <code>public.mark_product_market.price_retal</code>.
     */
    public BigDecimal getPriceRetal() {
        return this.priceRetal;
    }

    /**
     * Setter for <code>public.mark_product_market.price_retal</code>.
     */
    public MarkProductMarket setPriceRetal(BigDecimal priceRetal) {
        this.priceRetal = priceRetal;
        return this;
    }

    /**
     * Getter for <code>public.mark_product_market.market_id</code>.
     */
    public Long getMarketId() {
        return this.marketId;
    }

    /**
     * Setter for <code>public.mark_product_market.market_id</code>.
     */
    public MarkProductMarket setMarketId(Long marketId) {
        this.marketId = marketId;
        return this;
    }

    /**
     * Getter for <code>public.mark_product_market.quantity</code>.
     */
    public Integer getQuantity() {
        return this.quantity;
    }

    /**
     * Setter for <code>public.mark_product_market.quantity</code>.
     */
    public MarkProductMarket setQuantity(Integer quantity) {
        this.quantity = quantity;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final MarkProductMarket other = (MarkProductMarket) obj;
        if (this.productId == null) {
            if (other.productId != null)
                return false;
        }
        else if (!this.productId.equals(other.productId))
            return false;
        if (this.priceWholesale == null) {
            if (other.priceWholesale != null)
                return false;
        }
        else if (!this.priceWholesale.equals(other.priceWholesale))
            return false;
        if (this.calcUnit == null) {
            if (other.calcUnit != null)
                return false;
        }
        else if (!this.calcUnit.equals(other.calcUnit))
            return false;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.occurAt == null) {
            if (other.occurAt != null)
                return false;
        }
        else if (!this.occurAt.equals(other.occurAt))
            return false;
        if (this.priceRetal == null) {
            if (other.priceRetal != null)
                return false;
        }
        else if (!this.priceRetal.equals(other.priceRetal))
            return false;
        if (this.marketId == null) {
            if (other.marketId != null)
                return false;
        }
        else if (!this.marketId.equals(other.marketId))
            return false;
        if (this.quantity == null) {
            if (other.quantity != null)
                return false;
        }
        else if (!this.quantity.equals(other.quantity))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.productId == null) ? 0 : this.productId.hashCode());
        result = prime * result + ((this.priceWholesale == null) ? 0 : this.priceWholesale.hashCode());
        result = prime * result + ((this.calcUnit == null) ? 0 : this.calcUnit.hashCode());
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.occurAt == null) ? 0 : this.occurAt.hashCode());
        result = prime * result + ((this.priceRetal == null) ? 0 : this.priceRetal.hashCode());
        result = prime * result + ((this.marketId == null) ? 0 : this.marketId.hashCode());
        result = prime * result + ((this.quantity == null) ? 0 : this.quantity.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("MarkProductMarket (");

        sb.append(productId);
        sb.append(", ").append(priceWholesale);
        sb.append(", ").append(calcUnit);
        sb.append(", ").append(id);
        sb.append(", ").append(occurAt);
        sb.append(", ").append(priceRetal);
        sb.append(", ").append(marketId);
        sb.append(", ").append(quantity);

        sb.append(")");
        return sb.toString();
    }
}
