/*
 * This file is generated by jOOQ.
 */
package com.agri.mis.db.tables.records;


import com.agri.mis.db.tables.MisBankAccount;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MisBankAccountRecord extends UpdatableRecordImpl<MisBankAccountRecord> implements Record7<Long, String, String, String, Long, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.mis_bank_account.id</code>.
     */
    public MisBankAccountRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.mis_bank_account.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.mis_bank_account.account_name</code>.
     */
    public MisBankAccountRecord setAccountName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.mis_bank_account.account_name</code>.
     */
    public String getAccountName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.mis_bank_account.bank_branch</code>.
     */
    public MisBankAccountRecord setBankBranch(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.mis_bank_account.bank_branch</code>.
     */
    public String getBankBranch() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.mis_bank_account.account_no</code>.
     */
    public MisBankAccountRecord setAccountNo(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.mis_bank_account.account_no</code>.
     */
    public String getAccountNo() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.mis_bank_account.entity_id</code>.
     */
    public MisBankAccountRecord setEntityId(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.mis_bank_account.entity_id</code>.
     */
    public Long getEntityId() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>public.mis_bank_account.entity_name</code>.
     */
    public MisBankAccountRecord setEntityName(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.mis_bank_account.entity_name</code>.
     */
    public String getEntityName() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.mis_bank_account.bank</code>.
     */
    public MisBankAccountRecord setBank(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.mis_bank_account.bank</code>.
     */
    public String getBank() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, String, String, String, Long, String, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, String, String, String, Long, String, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return MisBankAccount.MIS_BANK_ACCOUNT.ID;
    }

    @Override
    public Field<String> field2() {
        return MisBankAccount.MIS_BANK_ACCOUNT.ACCOUNT_NAME;
    }

    @Override
    public Field<String> field3() {
        return MisBankAccount.MIS_BANK_ACCOUNT.BANK_BRANCH;
    }

    @Override
    public Field<String> field4() {
        return MisBankAccount.MIS_BANK_ACCOUNT.ACCOUNT_NO;
    }

    @Override
    public Field<Long> field5() {
        return MisBankAccount.MIS_BANK_ACCOUNT.ENTITY_ID;
    }

    @Override
    public Field<String> field6() {
        return MisBankAccount.MIS_BANK_ACCOUNT.ENTITY_NAME;
    }

    @Override
    public Field<String> field7() {
        return MisBankAccount.MIS_BANK_ACCOUNT.BANK;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getAccountName();
    }

    @Override
    public String component3() {
        return getBankBranch();
    }

    @Override
    public String component4() {
        return getAccountNo();
    }

    @Override
    public Long component5() {
        return getEntityId();
    }

    @Override
    public String component6() {
        return getEntityName();
    }

    @Override
    public String component7() {
        return getBank();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getAccountName();
    }

    @Override
    public String value3() {
        return getBankBranch();
    }

    @Override
    public String value4() {
        return getAccountNo();
    }

    @Override
    public Long value5() {
        return getEntityId();
    }

    @Override
    public String value6() {
        return getEntityName();
    }

    @Override
    public String value7() {
        return getBank();
    }

    @Override
    public MisBankAccountRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public MisBankAccountRecord value2(String value) {
        setAccountName(value);
        return this;
    }

    @Override
    public MisBankAccountRecord value3(String value) {
        setBankBranch(value);
        return this;
    }

    @Override
    public MisBankAccountRecord value4(String value) {
        setAccountNo(value);
        return this;
    }

    @Override
    public MisBankAccountRecord value5(Long value) {
        setEntityId(value);
        return this;
    }

    @Override
    public MisBankAccountRecord value6(String value) {
        setEntityName(value);
        return this;
    }

    @Override
    public MisBankAccountRecord value7(String value) {
        setBank(value);
        return this;
    }

    @Override
    public MisBankAccountRecord values(Long value1, String value2, String value3, String value4, Long value5, String value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MisBankAccountRecord
     */
    public MisBankAccountRecord() {
        super(MisBankAccount.MIS_BANK_ACCOUNT);
    }

    /**
     * Create a detached, initialised MisBankAccountRecord
     */
    public MisBankAccountRecord(Long id, String accountName, String bankBranch, String accountNo, Long entityId, String entityName, String bank) {
        super(MisBankAccount.MIS_BANK_ACCOUNT);

        setId(id);
        setAccountName(accountName);
        setBankBranch(bankBranch);
        setAccountNo(accountNo);
        setEntityId(entityId);
        setEntityName(entityName);
        setBank(bank);
    }

    /**
     * Create a detached, initialised MisBankAccountRecord
     */
    public MisBankAccountRecord(com.agri.mis.db.tables.pojos.MisBankAccount value) {
        super(MisBankAccount.MIS_BANK_ACCOUNT);

        if (value != null) {
            setId(value.getId());
            setAccountName(value.getAccountName());
            setBankBranch(value.getBankBranch());
            setAccountNo(value.getAccountNo());
            setEntityId(value.getEntityId());
            setEntityName(value.getEntityName());
            setBank(value.getBank());
        }
    }
}
