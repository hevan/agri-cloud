/*
 * This file is generated by jOOQ.
 */
package com.agri.mis.db.tables.records;


import com.agri.mis.db.tables.MarkCategory;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MarkCategoryRecord extends UpdatableRecordImpl<MarkCategoryRecord> implements Record4<Long, String, String, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.mark_category.id</code>.
     */
    public MarkCategoryRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.mark_category.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.mark_category.name</code>.
     */
    public MarkCategoryRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.mark_category.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.mark_category.image_url</code>.
     */
    public MarkCategoryRecord setImageUrl(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.mark_category.image_url</code>.
     */
    public String getImageUrl() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.mark_category.parent_id</code>.
     */
    public MarkCategoryRecord setParentId(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.mark_category.parent_id</code>.
     */
    public Long getParentId() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, String, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, String, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return MarkCategory.MARK_CATEGORY.ID;
    }

    @Override
    public Field<String> field2() {
        return MarkCategory.MARK_CATEGORY.NAME;
    }

    @Override
    public Field<String> field3() {
        return MarkCategory.MARK_CATEGORY.IMAGE_URL;
    }

    @Override
    public Field<Long> field4() {
        return MarkCategory.MARK_CATEGORY.PARENT_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getImageUrl();
    }

    @Override
    public Long component4() {
        return getParentId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getImageUrl();
    }

    @Override
    public Long value4() {
        return getParentId();
    }

    @Override
    public MarkCategoryRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public MarkCategoryRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public MarkCategoryRecord value3(String value) {
        setImageUrl(value);
        return this;
    }

    @Override
    public MarkCategoryRecord value4(Long value) {
        setParentId(value);
        return this;
    }

    @Override
    public MarkCategoryRecord values(Long value1, String value2, String value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MarkCategoryRecord
     */
    public MarkCategoryRecord() {
        super(MarkCategory.MARK_CATEGORY);
    }

    /**
     * Create a detached, initialised MarkCategoryRecord
     */
    public MarkCategoryRecord(Long id, String name, String imageUrl, Long parentId) {
        super(MarkCategory.MARK_CATEGORY);

        setId(id);
        setName(name);
        setImageUrl(imageUrl);
        setParentId(parentId);
    }

    /**
     * Create a detached, initialised MarkCategoryRecord
     */
    public MarkCategoryRecord(com.agri.mis.db.tables.pojos.MarkCategory value) {
        super(MarkCategory.MARK_CATEGORY);

        if (value != null) {
            setId(value.getId());
            setName(value.getName());
            setImageUrl(value.getImageUrl());
            setParentId(value.getParentId());
        }
    }
}
